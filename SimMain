import numpy as np
import matplotlib.pyplot as plt 
import matplotlib.lines as lines 

#parameter interaction
timescale = 300
tc = 45
startnutrientconcen = 0.05

#TweakerVal1 = latent GFP production?
tweakerval1 = 0.04
toxthrld = 0.005
h = np.log((1/toxthrld)-1)
dp = 0.04

td = np.linspace(0,timescale,timescale)
c = np.linspace(0,timescale,timescale)
n = np.linspace(0,timescale,timescale)
u = np.linspace(0,timescale,timescale)
s = np.linspace(0,timescale,timescale)
v = np.linspace(0,timescale,timescale)
p = np.linspace(0,timescale,timescale)
fc = np.linspace(0,timescale,timescale)

ks = 0.02
cmax = 0.0225
cngl = -h+np.sqrt((h**2) + 4*cmax)
umax = 2
y = 0.9
m = 0.000000000000384

c[0] = 0.001
s[0] = 0.05
v[0] = 1/(1+np.exp((c[0]-(cngl)**2)/(2*(cngl))))
p[0] = 0
u[0] = umax * (s[0]/(ks+s[0])) * v[0]
n[0] = 1500000
fc[0] = 1


for i in range(timescale-1):
    c[i] = np.exp(1/(i+(1/(np.log(c[0]+1)))))-1

for t in range(timescale-1):
    p[t+1] = p[t] * (1-tweakerval1) + ((c[t])/(1+c[t]))
    c[t+1] = np.exp(1/((t+1)*(p[t+1])+(1/(np.log(c[0]+1)))))-1
    n[t+1] = n[t] + (n[0] * (u[t])**(t/tc))
    v[t+1] = 1/(1+np.exp((c[t]-(cngl)**2)/(2*(cngl))))
    u[t+1] = umax * (s[t]/(ks+s[t])) * v[t]
    s[t+1] = s[t] - (u[t]*n[t]*m/y)
    


td2 = np.linspace(0,timescale,timescale)
c2 = np.linspace(0,timescale,timescale)
n2 = np.linspace(0,timescale,timescale)
u2 = np.linspace(0,timescale,timescale)
s2 = np.linspace(0,timescale,timescale)
v2 = np.linspace(0,timescale,timescale)
p2 = np.linspace(0,timescale,timescale)




s2[0] = 0.05
v2[0] = 1/(1+np.exp((c2[0]-(cngl)**2)/(2*(cngl))))
p2[0] = 0
u2[0] = umax * (s2[0]/(ks+s2[0])) * v2[0]
n2[0] = 1500000



for i in range(timescale-1):
    c2[i] = 0

for t in range(timescale-1):
    p2[t+1] = p2[t] * (1-tweakerval1) + ((c2[t])/(1+c2[t]))
    n2[t+1] = n2[t] + (n2[0] * (u2[t])**(t/tc))
    v2[t+1] = 1/(1+np.exp((c2[t]-(cngl)**2)/(2*(cngl))))
    u2[t+1] = umax * (s2[t]/(ks+s2[t])) * v2[t]
    s2[t+1] = s2[t] - (u2[t]*n2[t]*m/y)

for t in range(timescale-1):
    fc[t+1] = ((p2[t])/n2[t])/((p[t])/n[t])


    

figure, axis = plt.subplots(2, 4) 
  

axis[0, 0].plot(td, fc) 
axis[0, 0].set_title("Fold Change Magnitude") 
  

axis[0, 1].plot(td, s) 
axis[0, 1].set_title("Nutrition Concentration") 


axis[0, 2].plot(td, u) 
axis[0, 2].set_title("Growth Rate") 


axis[0, 3].plot(td, p) 
axis[0, 3].set_title("Non Control Protein") 


axis[1, 0].plot(td, n) 
axis[1, 0].set_title("Cell Count") 
  

axis[1, 1].plot(td, n2) 
axis[1, 1].set_title("Cell Count 2") 


axis[1, 2].plot(td, v) 
axis[1, 2].set_title("Viability in Toxic Cond.") 

axis[1, 3].plot(td, p2) 
axis[1, 3].set_title("Control Protein") 

plt.show()
